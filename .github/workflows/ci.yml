name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master

jobs:
  build-cache:
    runs-on: ubuntu-24.04
    permissions:
      packages: write
    strategy:
      matrix:
        env_variant: [default]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Spack
        uses: spack/setup-spack@v2.1.1
        with:
          buildcache: true
          color: true
          path: _spack

      - name: Checkout NumPEx Spack packages
        uses: actions/checkout@v4
        with:
          repository: numpex/spack.numpex
          path: numpex-spack
          fetch-depth: 1

      - name: Add NumPEx repo to Spack
        run: |
          spack repo add numpex-spack

      - name: Install Metis via Spack
        run: |
          ls -l
          spack -e spack/metis-${{ matrix.env_variant }} install --no-check-signature

      - name: Push packages and update index
        run: |
          spack -e spack/metis-${{ matrix.env_variant }} mirror set --push --oci-username ${{ github.actor }} --oci-password "${{ secrets.GITHUB_TOKEN }}" feelpp-buildcache
          spack -e spack/metis-${{ matrix.env_variant }} buildcache push --base-image ubuntu:24.04 --unsigned --update-index feelpp-buildcache
        if: ${{ !cancelled() }}

  build:
    needs: build-cache
    runs-on: ubuntu-24.04
    permissions:
      packages: write
    strategy:
      matrix:
        env_variant: [default]
        preset: [default, shared]
    continue-on-error: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Spack
        uses: spack/setup-spack@v2.1.1
        with:
          buildcache: true
          color: true
          path: _spack

      - name: Checkout NumPEx Spack packages
        uses: actions/checkout@v4
        with:
          repository: numpex/spack.numpex
          path: numpex-spack
          fetch-depth: 1

      - name: Add NumPEx repo to Spack
        run: |
          spack repo add numpex-spack

      - name: Spack install dependencies
        run: spack -e spack/metis-${{ matrix.env_variant }} install --no-check-signature

      - name: Configure CMake
        shell: spack-bash {0}
        run: |
          spack env activate spack/metis-${{ matrix.env_variant }}
          cmake --preset ${{ matrix.preset }}

      - name: Build
        run: cmake --build --preset ${{ matrix.preset }} --parallel

      - name: Test
        run: ctest --preset ${{ matrix.preset }} --output-on-failure

      - name: Package with CPack
        run: |
          cmake --build --preset ${{ matrix.preset }} --target package
          cmake --build --preset ${{ matrix.preset }} --target package_source

      - name: Upload Metis artifacts
        uses: actions/upload-artifact@v4
        with:
          name: metis-artifacts-${{ matrix.preset }}
          path: |
            build/${{ matrix.preset }}/*.tar.gz
            build/${{ matrix.preset }}/*.zip
  release:
    # only run on tag pushes
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - name: Download Metis artifacts
        uses: actions/download-artifact@v4
        with:
          # match the preset you want to release; here we pick "default"
          name: metis-artifacts-default
          path: dist

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          # include both tgz and zip
          files: |
            dist/*.tar.gz
            dist/*.zip
          draft: false
          # mark prereleases for pre-releases tags
          prerelease: ${{ contains(github.ref, '-rc') || contains(github.ref, '-alpha') || contains(github.ref, '-beta') }}
          name: Release ${{ github.ref_name }}
          generate_release_notes: true
          tag_name: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}        