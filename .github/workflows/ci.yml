name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-24.04
    permissions:
      packages: write
    strategy:
      matrix:
        env_variant: [metis-default]
        preset: [int32-real32-shared, int64-real64-shared]
    continue-on-error: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Prepare Spack & Push Build-Cache
        uses: numpex/spack-buildcache-action@v1.1.2
        with:
          env-variant:    ${{ matrix.env_variant }}
          repo-packages:  numpex/spack.numpex
          repo-packages-path: numpex-spack
          mirror:         numpex-buildcache
          mirror-token:   ${{ secrets.GITHUB_TOKEN }}
          env-path: .spack
          # base-image: ubuntu:24.04          

      - name: Configure CMake
        shell: spack-bash {0}
        run: |
          spack env activate .spack/${{ matrix.env_variant }}
          cmake --preset ${{ matrix.preset }}

      - name: Build
        run: cmake --build --preset ${{ matrix.preset }} --parallel

      - name: Test
        run: ctest --preset ${{ matrix.preset }} --output-on-failure

      - name: Package with CPack
        run: |
          cmake --build --preset ${{ matrix.preset }} --target package
          cmake --build --preset ${{ matrix.preset }} --target package_source

      - name: Upload Metis artifacts
        uses: actions/upload-artifact@v4
        with:
          name: metis-artifacts-${{ matrix.preset }}
          path: |
            build/${{ matrix.preset }}/*.tar.gz
            build/${{ matrix.preset }}/*.zip
  release:
    # only run on tag pushes
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - name: Download Metis artifacts
        uses: actions/download-artifact@v4
        with:
          # match the preset you want to release; here we pick "default"
          name: metis-artifacts-default
          path: dist

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          # include both tgz and zip
          files: |
            dist/*.tar.gz
            dist/*.zip
          draft: false
          # mark prereleases for pre-releases tags
          prerelease: ${{ contains(github.ref, '-rc') || contains(github.ref, '-alpha') || contains(github.ref, '-beta') }}
          name: Release ${{ github.ref_name }}
          generate_release_notes: true
          tag_name: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}        